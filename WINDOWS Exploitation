##Modes & Levels##
Kernel Mode vs User Mode
Privileged vs Unprivileged

##Windows Access Control Model##
Access Tokens
Security Identifier (SID) associations and Token associations
Security Descriptors
DACL
SACL
ACEs

###DLL Search Order### 
Executables check the following locations (in successive order):
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs
The directory the the Application was run from
The directory specified in in the C+ function GetSystemDirectory()
The directory specified in the C+ function GetWindowsDirectory()
The current directory

Windows Integrity Mechanism
Integrity Levels
Untrusted -Anonymous SID access tokens
Low -Everyone SID access token (World)
Medium -Authenticated Users
High -Administrators
System -System services (LocalSystem, LocalService, NetworkService)


User Account Control (UAC)
Always Notify
Notify me only when programs try to make changes to my computer
Notify me only when programs try to make changes to my computer (do not dim my desktop)
Never notify

AutoElevate Executables
Requested Execution Levels:
-asInvoker
-highestAvailable


Privilege Escalation
-Actions that allow an adversary to obtain a higher level of permissions on a system or network


Scheduled Tasks & Services
Items to evaluate include:
Write Permissions
Non-Standard Locations
Unquoted Executable Paths
Vulnerabilities in Executables
Permissions to Run As SYSTEM



###PRIV ESC PROGRAMS                                                         #################################################################
##Registry
Regedit or regquery
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce

Audit Logging
auditpol /get /category:* | findstr /i "success failure"     #Show all audit category settings in the first part before the PIPE

Finding vulnerable Scheduled Tasks
schtasks /query /fo LIST /v
task schedule program - only need the action colum and triggers
services program -if you don't see a description (program might be bad research it)          ##############IMPORTANT############

VIEW EVENTS
event viewer ##IMPORTANT###
(get-process | where-object -propoerty processname -like "putty*").kill()

##View hidden items
file explorer > view > check hidden items 

msfvemnom -p windows/exec CMD=' cmd.exe /C "whoami" > C:\Users\student\Desktop\whoami.txt' -f dll > SSPICLI.dll


DEMO: Checking UAC Settings
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System

DEMO: DLL Hijacking
Identify Vulnerability
Take advantage of the default search order for DLLs
NAME_NOT_FOUND present in executableâ€™s system calls
Validate permissions
Create and transfer Malicious DLL

DEMO: Finding Vulnerable Services
wmic service list full
sc query


DEMO: Vulnerable services
Identify Vulnerability
Validate permissions
Validate Executable Paths
Replace with Malicious File


Other Vulnerabilities
Unpatched Kernel Vulnerabilities
Unpatched Systems
Unpatched Applications


DEMO: SYSTEM Access and Defeating Protections
The objective of this is to provide yourself unrestricted access to a system, and identify methods to execute malicious activity, through a basic command line prompt
Sysinternals
Schedule Task
UAC Bypass

Persistance
System changes or binary uploads that provide the adversary continued access to system
Survives:
Reboots
Credential changes
DHCP IP reassignment
Etc.

Considerations include:
File naming
File location
Timestomping
Port selection


System usage commands
wmic
net
netstat

Important Microsoft Event IDs
4624/4625 -Successful/failed login
4720 -Account created
4672 -Administrative user logged on
7045 -Service created

DEMO: Event Logging
Storage: c:\windows\system32\config\
File-Type: .evtx/.evt
wevtutil el
wmic ntevent where "logfile="<LOGNAME>" list full
Get-Eventlog -List

PowerShell Logging
Windows CLI CMD history is per instance (doskey /history)














