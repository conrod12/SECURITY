BUFFER OVERFLOW COMMON TERMS

Heap- Memory that can be allocated and deallocated
Stack -A contiguous section of memory used for passing arguments
Registers -Storage elements as close as possible to the central processing unit (CPU)
Instruction Pointer (IP) -a.k.a Program Counter (PC), contains the address of next instruction to be executed
Stack Pointer (SP) -Contains the address of the next available space on the stack
Base Pointer (BP) -The base of the stack
Function -Code that is separate from the main program that is often used to replace code the repeats in order to make the program smaller and more efficient
Shellcode -The code that is executed once an exploit successfully takes advantage of a vulnerability

NOP SLED - a NOP sled (or "no-operation" sled") is a sequence of "no-operation" (NOP) machine instructions.

                                                                                                                                                                                    TM ON WINDOWS MONA, IMMUNITY
GDB USES
* installations of peda plugin
  git clone https://github.com/longld/peda.git ~/peda
  echo "source ~/peda/peda.py" >> ~/.gdbinit

DEMO on func.exe
strings func1 | head 
file func  -to see the file type.
DYNAMIC ANALYSIS  RUN in lINUX OPS STATION.
  ./func $(echo "12345678") #pass argument
  ./func <<<$(echo "12345678") #the gators are simulating  user input

## DISASSEMBLY
gdb ./func command
shell - bring you back to your shell or working directory.
exit - bring you back to gdb from shell
quit - break you out of gdb

IN GDB                                ##DON'T HIDE ANYTHING IN X86
  info functions
  run - to run the program 
  disass or pdisass main #pdisass only work if you have peta
      disass main
  pdisass getuserinput #getuserinput is a function    #open source research on red. do open source research oom it.
run <<<$(echo "AAA")
run <<<$(python linbuff.py)
google wiremask  https://wiremask.eu/tools/buffer-overflow-pattern-generator/
copy paste paterrn - paste it in a new offset in your code with quotes. 
run it in gdb now you looking for EIP, copy eip in the offset on the website, you should get a number.

PYTHON  SCRIPT
#!/usr/bin/env python
offset = "A" * 100
print(offset)
eip = "BBBB"
offset = " paste from wiremask"                  TROUBLESHOOT ##RUN FILE AND THE EXECUTABLE 
print(offset+eip)



